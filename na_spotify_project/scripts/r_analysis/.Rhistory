#net <- induced_subgraph(g, 1:3250)
net <- delete.vertices(g, degree(g)< 9)
V(net)$size <- as.integer(V(net)$popularity)*0.1
V(net)$color <- sapply(V(net)$genre, g_genre_color, simplify = TRUE)
V(net)$label <- V(net)$artistname
V(net)$label.color <- "black"
V(net)$label.cex <- sapply(degree(net)[V(net)], font.size, simplify = TRUE)
plot(net)
library(igraph)
processFiles <- function(edge_filepath, node_filepath, my_graph){
# first process nodes and attributes
artist_ids = c()
artist_names = c()
genres = c()
popularities = c()
wrong_artists = c()
nodes_con = file(node_filepath, "r")
while (TRUE){
line = readLines(nodes_con, n = 1)
if (length(line) == 0){
break
}
a = strsplit(line, ";")[[1]]
if (length(a) == 4){
artist_id <- strsplit(a[1], ':')[[1]][3]
artist_ids <- c(artist_ids, artist_id)
artist_names <- c(artist_names, a[2])
genres <- c(genres, a[3])
popularities <- c(popularities, a[4])
} else{
wrong_artists <- c(wrong_artists, strsplit(a[1], ':')[[1]][3])
}
}
close(nodes_con)
my_graph <- my_graph + vertices(artist_ids)
my_graph <- set_vertex_attr(my_graph, 'artistname', V(my_graph), artist_names)
my_graph <- set_vertex_attr(my_graph, 'genre', V(my_graph), genres)
my_graph <- set_vertex_attr(my_graph, 'popularity', V(my_graph), popularities)
# handle edges
edges = c()
edges_con = file(edge_filepath, "r")
while (TRUE){
line = readLines(edges_con, n = 1)
if (length(line) == 0){
break
}
a = strsplit(strsplit(line, ' ')[[1]][1], ':')[[1]][3]
b = strsplit(strsplit(line, ' ')[[1]][2], ':')[[1]][3]
if (!is.element(a, wrong_artists) & !is.element(b, wrong_artists)){
edges = c(edges, a, b)
}
}
close(edges_con)
my_graph <- my_graph + edges(edges)
my_graph <- as.undirected(my_graph)
return (my_graph)
}
g <- make_empty_graph()
#g <- processFiles("pri_genre_edgelist.txt", "pri_genre_nodelist.txt", g)
g <- processFiles("norm_edge.txt", "norm_node.txt", g)
#net <- induced_subgraph(g, 1:3250)
net <- delete.vertices(g, degree(g)< 1)
V(net)$size <- as.integer(V(net)$popularity)*0.1
V(net)$color <- sapply(V(net)$genre, g_genre_color, simplify = TRUE)
V(net)$label <- V(net)$artistname
V(net)$label.color <- "black"
V(net)$label.cex <- sapply(degree(net)[V(net)], font.size, simplify = TRUE)
plot(net)
library(igraph)
processFiles <- function(edge_filepath, node_filepath, my_graph){
# first process nodes and attributes
artist_ids = c()
artist_names = c()
genres = c()
popularities = c()
wrong_artists = c()
nodes_con = file(node_filepath, "r")
while (TRUE){
line = readLines(nodes_con, n = 1)
if (length(line) == 0){
break
}
a = strsplit(line, ";")[[1]]
if (length(a) == 4){
artist_id <- strsplit(a[1], ':')[[1]][3]
artist_ids <- c(artist_ids, artist_id)
artist_names <- c(artist_names, a[2])
genres <- c(genres, a[3])
popularities <- c(popularities, a[4])
} else{
wrong_artists <- c(wrong_artists, strsplit(a[1], ':')[[1]][3])
}
}
close(nodes_con)
my_graph <- my_graph + vertices(artist_ids)
my_graph <- set_vertex_attr(my_graph, 'artistname', V(my_graph), artist_names)
my_graph <- set_vertex_attr(my_graph, 'genre', V(my_graph), genres)
my_graph <- set_vertex_attr(my_graph, 'popularity', V(my_graph), popularities)
# handle edges
edges = c()
edges_con = file(edge_filepath, "r")
while (TRUE){
line = readLines(edges_con, n = 1)
if (length(line) == 0){
break
}
a = strsplit(strsplit(line, ' ')[[1]][1], ':')[[1]][3]
b = strsplit(strsplit(line, ' ')[[1]][2], ':')[[1]][3]
if (!is.element(a, wrong_artists) & !is.element(b, wrong_artists)){
edges = c(edges, a, b)
}
}
close(edges_con)
my_graph <- my_graph + edges(edges)
my_graph <- as.undirected(my_graph)
return (my_graph)
}
g <- make_empty_graph()
#g <- processFiles("pri_genre_edgelist.txt", "pri_genre_nodelist.txt", g)
g <- processFiles("norm_edge2.txt", "norm_node2.txt", g)
#net <- induced_subgraph(g, 1:3250)
net <- delete.vertices(g, degree(g)< 1)
V(net)$size <- as.integer(V(net)$popularity)*0.1
V(net)$color <- sapply(V(net)$genre, g_genre_color, simplify = TRUE)
V(net)$label <- V(net)$artistname
V(net)$label.color <- "black"
V(net)$label.cex <- sapply(degree(net)[V(net)], font.size, simplify = TRUE)
plot(net)
#net <- induced_subgraph(g, 1:3250)
net <- delete.vertices(g, degree(g)< 2)
V(net)$size <- as.integer(V(net)$popularity)*0.1
V(net)$color <- sapply(V(net)$genre, g_genre_color, simplify = TRUE)
V(net)$label <- V(net)$artistname
V(net)$label.color <- "black"
V(net)$label.cex <- sapply(degree(net)[V(net)], font.size, simplify = TRUE)
plot(net)
#net <- induced_subgraph(g, 1:3250)
net <- delete.vertices(g, degree(g)< 2)
V(net)$size <- as.integer(V(net)$popularity)*0.1
V(net)$color <- sapply(V(net)$genre, g_genre_color, simplify = TRUE)
V(net)$label <- V(net)$artistname
V(net)$label.color <- "black"
V(net)$label.cex <- sapply(degree(net)[V(net)], font.size, simplify = TRUE)
plot(net)
#net <- induced_subgraph(g, 1:3250)
net <- delete.vertices(g, degree(g)< 2)
V(net)$size <- as.integer(V(net)$popularity)*0.1
V(net)$color <- sapply(V(net)$genre, g_genre_color, simplify = TRUE)
V(net)$label <- V(net)$artistname
V(net)$label.color <- "black"
V(net)$label.cex <- sapply(degree(net)[V(net)], font.size, simplify = TRUE)
plot(net)
#net <- induced_subgraph(g, 1:3250)
net <- delete.vertices(g, degree(g)< 2)
V(net)$size <- as.integer(V(net)$popularity)*0.1
V(net)$color <- sapply(V(net)$genre, g_genre_color, simplify = TRUE)
V(net)$label <- V(net)$artistname
V(net)$label.color <- "black"
V(net)$label.cex <- sapply(degree(net)[V(net)], font.size, simplify = TRUE)
plot(net)
#net <- induced_subgraph(g, 1:3250)
net <- delete.vertices(g, degree(g)< 2)
V(net)$size <- as.integer(V(net)$popularity)*0.1
V(net)$color <- sapply(V(net)$genre, g_genre_color, simplify = TRUE)
V(net)$label <- V(net)$artistname
V(net)$label.color <- "black"
V(net)$label.cex <- sapply(degree(net)[V(net)], font.size, simplify = TRUE)
plot(net)
#net <- induced_subgraph(g, 1:3250)
net <- delete.vertices(g, degree(g)< 2)
V(net)$size <- as.integer(V(net)$popularity)*0.1
V(net)$color <- sapply(V(net)$genre, g_genre_color, simplify = TRUE)
V(net)$label <- V(net)$artistname
V(net)$label.color <- "black"
V(net)$label.cex <- sapply(degree(net)[V(net)], font.size, simplify = TRUE)
plot(net)
#net <- induced_subgraph(g, 1:3250)
net <- delete.vertices(g, degree(g)< 0)
V(net)$size <- as.integer(V(net)$popularity)*0.1
V(net)$color <- sapply(V(net)$genre, g_genre_color, simplify = TRUE)
V(net)$label <- V(net)$artistname
V(net)$label.color <- "black"
V(net)$label.cex <- sapply(degree(net)[V(net)], font.size, simplify = TRUE)
plot(net)
#net <- induced_subgraph(g, 1:3250)
net <- delete.vertices(g, degree(g)< 5)
V(net)$size <- as.integer(V(net)$popularity)*0.1
V(net)$color <- sapply(V(net)$genre, g_genre_color, simplify = TRUE)
V(net)$label <- V(net)$artistname
V(net)$label.color <- "black"
V(net)$label.cex <- sapply(degree(net)[V(net)], font.size, simplify = TRUE)
plot(net)
#net <- induced_subgraph(g, 1:3250)
net <- delete.vertices(g, degree(g)< 2)
V(net)$size <- as.integer(V(net)$popularity)*0.1
V(net)$color <- sapply(V(net)$genre, g_genre_color, simplify = TRUE)
V(net)$label <- V(net)$artistname
V(net)$label.color <- "black"
V(net)$label.cex <- sapply(degree(net)[V(net)], font.size, simplify = TRUE)
plot(net)
#net <- induced_subgraph(g, 1:3250)
net <- delete.vertices(g, degree(g)< 2)
V(net)$size <- as.integer(V(net)$popularity)*0.1
V(net)$color <- sapply(V(net)$genre, g_genre_color, simplify = TRUE)
V(net)$label <- V(net)$artistname
V(net)$label.color <- "black"
V(net)$label.cex <- sapply(degree(net)[V(net)], font.size, simplify = TRUE)
plot(net)
#net <- induced_subgraph(g, 1:3250)
net <- delete.vertices(g, degree(g)< 1)
V(net)$size <- as.integer(V(net)$popularity)*0.1
V(net)$color <- sapply(V(net)$genre, g_genre_color, simplify = TRUE)
V(net)$label <- V(net)$artistname
V(net)$label.color <- "black"
V(net)$label.cex <- sapply(degree(net)[V(net)], font.size, simplify = TRUE)
plot(net)
#net <- induced_subgraph(g, 1:3250)
net <- delete.vertices(g, degree(g)< 1)
V(net)$size <- as.integer(V(net)$popularity)*0.1
V(net)$color <- sapply(V(net)$genre, g_genre_color, simplify = TRUE)
V(net)$label <- V(net)$artistname
V(net)$label.color <- "black"
V(net)$label.cex <- sapply(degree(net)[V(net)], font.size, simplify = TRUE)
plot(net)
library(igraph)
processFiles <- function(edge_filepath, node_filepath, my_graph){
# first process nodes and attributes
artist_ids = c()
artist_names = c()
genres = c()
popularities = c()
wrong_artists = c()
nodes_con = file(node_filepath, "r")
while (TRUE){
line = readLines(nodes_con, n = 1)
if (length(line) == 0){
break
}
a = strsplit(line, ";")[[1]]
if (length(a) == 4){
artist_id <- strsplit(a[1], ':')[[1]][3]
artist_ids <- c(artist_ids, artist_id)
artist_names <- c(artist_names, a[2])
genres <- c(genres, a[3])
popularities <- c(popularities, a[4])
} else{
wrong_artists <- c(wrong_artists, strsplit(a[1], ':')[[1]][3])
}
}
close(nodes_con)
my_graph <- my_graph + vertices(artist_ids)
my_graph <- set_vertex_attr(my_graph, 'artistname', V(my_graph), artist_names)
my_graph <- set_vertex_attr(my_graph, 'genre', V(my_graph), genres)
my_graph <- set_vertex_attr(my_graph, 'popularity', V(my_graph), popularities)
# handle edges
edges = c()
edges_con = file(edge_filepath, "r")
while (TRUE){
line = readLines(edges_con, n = 1)
if (length(line) == 0){
break
}
a = strsplit(strsplit(line, ' ')[[1]][1], ':')[[1]][3]
b = strsplit(strsplit(line, ' ')[[1]][2], ':')[[1]][3]
if (!is.element(a, wrong_artists) & !is.element(b, wrong_artists)){
edges = c(edges, a, b)
}
}
close(edges_con)
my_graph <- my_graph + edges(edges)
my_graph <- as.undirected(my_graph)
return (my_graph)
}
g <- make_empty_graph()
g <- processFiles("pri_genre_edgelist.txt", "pri_genre_nodelist.txt", g)
#g <- processFiles("norm_edge2.txt", "norm_node2.txt", g)
#net <- induced_subgraph(g, 1:3250)
net <- delete.vertices(g, degree(g)< 1)
V(net)$size <- as.integer(V(net)$popularity)*0.1
V(net)$color <- sapply(V(net)$genre, g_genre_color, simplify = TRUE)
V(net)$label <- V(net)$artistname
V(net)$label.color <- "black"
V(net)$label.cex <- sapply(degree(net)[V(net)], font.size, simplify = TRUE)
plot(net)
#net <- induced_subgraph(g, 1:3250)
net <- delete.vertices(g, degree(g)< 3)
V(net)$size <- as.integer(V(net)$popularity)*0.1
V(net)$color <- sapply(V(net)$genre, g_genre_color, simplify = TRUE)
V(net)$label <- V(net)$artistname
V(net)$label.color <- "black"
V(net)$label.cex <- sapply(degree(net)[V(net)], font.size, simplify = TRUE)
plot(net)
library(igraph)
processFiles <- function(edge_filepath, node_filepath, my_graph){
# first process nodes and attributes
artist_ids = c()
artist_names = c()
genres = c()
popularities = c()
wrong_artists = c()
nodes_con = file(node_filepath, "r")
while (TRUE){
line = readLines(nodes_con, n = 1)
if (length(line) == 0){
break
}
a = strsplit(line, ";")[[1]]
if (length(a) == 4){
artist_id <- strsplit(a[1], ':')[[1]][3]
artist_ids <- c(artist_ids, artist_id)
artist_names <- c(artist_names, a[2])
genres <- c(genres, a[3])
popularities <- c(popularities, a[4])
} else{
wrong_artists <- c(wrong_artists, strsplit(a[1], ':')[[1]][3])
}
}
close(nodes_con)
my_graph <- my_graph + vertices(artist_ids)
my_graph <- set_vertex_attr(my_graph, 'artistname', V(my_graph), artist_names)
my_graph <- set_vertex_attr(my_graph, 'genre', V(my_graph), genres)
my_graph <- set_vertex_attr(my_graph, 'popularity', V(my_graph), popularities)
# handle edges
edges = c()
edges_con = file(edge_filepath, "r")
while (TRUE){
line = readLines(edges_con, n = 1)
if (length(line) == 0){
break
}
a = strsplit(strsplit(line, ' ')[[1]][1], ':')[[1]][3]
b = strsplit(strsplit(line, ' ')[[1]][2], ':')[[1]][3]
if (!is.element(a, wrong_artists) & !is.element(b, wrong_artists)){
edges = c(edges, a, b)
}
}
close(edges_con)
my_graph <- my_graph + edges(edges)
my_graph <- as.undirected(my_graph)
return (my_graph)
}
g <- make_empty_graph()
#g <- processFiles("pri_genre_edgelist.txt", "pri_genre_nodelist.txt", g)
g <- processFiles("norm_edge2.txt", "norm_node2.txt", g)
#net <- induced_subgraph(g, 1:3250)
net <- delete.vertices(g, degree(g)< 3)
V(net)$size <- as.integer(V(net)$popularity)*0.1
V(net)$color <- sapply(V(net)$genre, g_genre_color, simplify = TRUE)
V(net)$label <- V(net)$artistname
V(net)$label.color <- "black"
V(net)$label.cex <- sapply(degree(net)[V(net)], font.size, simplify = TRUE)
plot(net)
#net <- induced_subgraph(g, 1:3250)
net <- delete.vertices(g, degree(g)< 2)
V(net)$size <- as.integer(V(net)$popularity)*0.1
V(net)$color <- sapply(V(net)$genre, g_genre_color, simplify = TRUE)
V(net)$label <- V(net)$artistname
V(net)$label.color <- "black"
V(net)$label.cex <- sapply(degree(net)[V(net)], font.size, simplify = TRUE)
plot(net)
#net <- induced_subgraph(g, 1:3250)
net <- delete.vertices(g, degree(g)< 1)
V(net)$size <- as.integer(V(net)$popularity)*0.1
V(net)$color <- sapply(V(net)$genre, g_genre_color, simplify = TRUE)
V(net)$label <- V(net)$artistname
V(net)$label.color <- "black"
V(net)$label.cex <- sapply(degree(net)[V(net)], font.size, simplify = TRUE)
plot(net)
library(igraph)
processFiles <- function(edge_filepath, node_filepath, my_graph){
# first process nodes and attributes
artist_ids = c()
artist_names = c()
genres = c()
popularities = c()
wrong_artists = c()
nodes_con = file(node_filepath, "r")
while (TRUE){
line = readLines(nodes_con, n = 1)
if (length(line) == 0){
break
}
a = strsplit(line, ";")[[1]]
if (length(a) == 4){
artist_id <- strsplit(a[1], ':')[[1]][3]
artist_ids <- c(artist_ids, artist_id)
artist_names <- c(artist_names, a[2])
genres <- c(genres, a[3])
popularities <- c(popularities, a[4])
} else{
wrong_artists <- c(wrong_artists, strsplit(a[1], ':')[[1]][3])
}
}
close(nodes_con)
my_graph <- my_graph + vertices(artist_ids)
my_graph <- set_vertex_attr(my_graph, 'artistname', V(my_graph), artist_names)
my_graph <- set_vertex_attr(my_graph, 'genre', V(my_graph), genres)
my_graph <- set_vertex_attr(my_graph, 'popularity', V(my_graph), popularities)
# handle edges
edges = c()
edges_con = file(edge_filepath, "r")
while (TRUE){
line = readLines(edges_con, n = 1)
if (length(line) == 0){
break
}
a = strsplit(strsplit(line, ' ')[[1]][1], ':')[[1]][3]
b = strsplit(strsplit(line, ' ')[[1]][2], ':')[[1]][3]
if (!is.element(a, wrong_artists) & !is.element(b, wrong_artists)){
edges = c(edges, a, b)
}
}
close(edges_con)
my_graph <- my_graph + edges(edges)
my_graph <- as.undirected(my_graph)
return (my_graph)
}
g <- make_empty_graph()
#g <- processFiles("pri_genre_edgelist.txt", "pri_genre_nodelist.txt", g)
g <- processFiles("norm_edge2.txt", "norm_node2.txt", g)
#net <- induced_subgraph(g, 1:3250)
net <- delete.vertices(g, degree(g)< 1)
V(net)$size <- as.integer(V(net)$popularity)*0.1
V(net)$color <- sapply(V(net)$genre, g_genre_color, simplify = TRUE)
V(net)$label <- V(net)$artistname
V(net)$label.color <- "black"
V(net)$label.cex <- sapply(degree(net)[V(net)], font.size, simplify = TRUE)
plot(net)
#net <- induced_subgraph(g, 1:3250)
net <- delete.vertices(g, degree(g)< 0)
V(net)$size <- as.integer(V(net)$popularity)*0.1
V(net)$color <- sapply(V(net)$genre, g_genre_color, simplify = TRUE)
V(net)$label <- V(net)$artistname
V(net)$label.color <- "black"
V(net)$label.cex <- sapply(degree(net)[V(net)], font.size, simplify = TRUE)
plot(net)
#net <- induced_subgraph(g, 1:3250)
net <- delete.vertices(g, degree(g)< 2)
V(net)$size <- as.integer(V(net)$popularity)*0.1
V(net)$color <- sapply(V(net)$genre, g_genre_color, simplify = TRUE)
V(net)$label <- V(net)$artistname
V(net)$label.color <- "black"
V(net)$label.cex <- sapply(degree(net)[V(net)], font.size, simplify = TRUE)
plot(net)
library(igraph)
processFiles <- function(edge_filepath, node_filepath, my_graph){
# first process nodes and attributes
artist_ids = c()
artist_names = c()
genres = c()
popularities = c()
wrong_artists = c()
nodes_con = file(node_filepath, "r")
while (TRUE){
line = readLines(nodes_con, n = 1)
if (length(line) == 0){
break
}
a = strsplit(line, ";")[[1]]
if (length(a) == 4){
artist_id <- strsplit(a[1], ':')[[1]][3]
artist_ids <- c(artist_ids, artist_id)
artist_names <- c(artist_names, a[2])
genres <- c(genres, a[3])
popularities <- c(popularities, a[4])
} else{
wrong_artists <- c(wrong_artists, strsplit(a[1], ':')[[1]][3])
}
}
close(nodes_con)
my_graph <- my_graph + vertices(artist_ids)
my_graph <- set_vertex_attr(my_graph, 'artistname', V(my_graph), artist_names)
my_graph <- set_vertex_attr(my_graph, 'genre', V(my_graph), genres)
my_graph <- set_vertex_attr(my_graph, 'popularity', V(my_graph), popularities)
# handle edges
edges = c()
edges_con = file(edge_filepath, "r")
while (TRUE){
line = readLines(edges_con, n = 1)
if (length(line) == 0){
break
}
a = strsplit(strsplit(line, ' ')[[1]][1], ':')[[1]][3]
b = strsplit(strsplit(line, ' ')[[1]][2], ':')[[1]][3]
if (!is.element(a, wrong_artists) & !is.element(b, wrong_artists)){
edges = c(edges, a, b)
}
}
close(edges_con)
my_graph <- my_graph + edges(edges)
my_graph <- as.undirected(my_graph)
return (my_graph)
}
g <- make_empty_graph()
#g <- processFiles("pri_genre_edgelist.txt", "pri_genre_nodelist.txt", g)
g <- processFiles("norm_edge2.txt", "norm_node2.txt", g)
#net <- induced_subgraph(g, 1:3250)
net <- delete.vertices(g, degree(g)< 2)
V(net)$size <- as.integer(V(net)$popularity)*0.1
V(net)$color <- sapply(V(net)$genre, g_genre_color, simplify = TRUE)
V(net)$label <- V(net)$artistname
V(net)$label.color <- "black"
V(net)$label.cex <- sapply(degree(net)[V(net)], font.size, simplify = TRUE)
plot(net)
#net <- induced_subgraph(g, 1:3250)
net <- delete.vertices(g, degree(g)< 1)
V(net)$size <- as.integer(V(net)$popularity)*0.1
V(net)$color <- sapply(V(net)$genre, g_genre_color, simplify = TRUE)
V(net)$label <- V(net)$artistname
V(net)$label.color <- "black"
V(net)$label.cex <- sapply(degree(net)[V(net)], font.size, simplify = TRUE)
plot(net)
